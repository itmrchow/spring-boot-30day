RabbitMQ
1.1 消息中間件
什麼是消息中間件：
Message Queue:資訊序列->應用程式與應用程式的通訊方法

為甚麼用：
    可將依些無須及時返回且耗時的操作提取出來,進行異步處理,可以節省server請求響應的時間,進而提高系統的吞吐量

使用場景：
    1.任務異步處理:
        將不需要同步處理且耗時長的操作，由資訊序列通知接收方進行異步處理。提高應用程式響應時間
    2.應用程式解耦
        MQ相當於一個中介，透過MQ進行交互
    3.削峰填谷
        將突發的大量請求暫存，再慢慢寫入

1.2 協議
主流方式：AMQP、JMS

AMQP(高級消息隊列協議)：
    是一種binary wire-level protocol(鏈接協議),不從API限定(使用任何語言皆可)，直接定義網路交換的格式
    ·透過規定協議來統一資料交換格式
    ·跨語言
    ·AMQP資訊模式更豐富
JMS(JAVA消息服務)：
    是JAVA對中間件的API,用於兩個應用程式間、或分散式系統中發送訊息，進行異步通訊
    ·定義統一的接口，對訊息操作進行統一
    ·必須使用Java
    ·規定兩種模式

1.3 RabbitMQ
基於AMQP
提供六種模式：
    簡單模式
    work模式
    Publish/Subscibe發布與訂閱模式
    Routing路由模式
    Topics主題模式
    RPC遠程調用模式

2.安裝
執行
docker run -d --hostname my-rabbit --name some-rabbit -p 15672:15672 rabbitmq:3-management
guest/ guest

角色
    超級管理員:可登管理控制台,查看所有訊息,可對用戶、策略進行操作
    監控者(monitoring):可登管理控制台,可看rabbitmq節點相關訊息(進程數,內存使用狀況,硬碟使用狀況)
    策略制定者:可登管理控制台,對policy進行管理
    普通管理者:僅可登管理控制台,無法看到節點資訊
    其他

Virtual Hosts設定
rabbitmq可以透過Virtual Host,來指定操作權限
每個VH相當於一個相對獨立的RabbitMQ伺服器，彼此互相隔離

3.生產者

生產者 -> exchange(交換機) -> Queue(序列) -> 消費者